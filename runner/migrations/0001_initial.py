# Generated by Django 5.2.6 on 2025-09-08 07:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomationTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('start_url', models.URLField()),
                ('max_pages', models.PositiveIntegerField(default=3)),
                ('max_depth', models.PositiveIntegerField(default=2)),
                ('delay_between_requests', models.FloatField(default=1.0)),
                ('timeout', models.PositiveIntegerField(default=30)),
                ('user_agent', models.CharField(blank=True, default='', max_length=512)),
                ('headless', models.BooleanField(default=True)),
                ('window_size', models.CharField(default='1920x1080', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('CAPTCHA_DETECTED', 'Captcha Detected'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('PAUSED', 'Paused')], default='PENDING', max_length=32)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_pages_visited', models.PositiveIntegerField(default=0)),
                ('total_errors', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, default='')),
                ('error_message', models.TextField(blank=True, default='')),
                ('config', models.JSONField(blank=True, default=dict)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('successful_requests', models.PositiveIntegerField(default=0)),
                ('failed_requests', models.PositiveIntegerField(default=0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('captcha_detections', models.PositiveIntegerField(default=0)),
                ('captcha_solves', models.PositiveIntegerField(default=0)),
                ('memory_peak', models.PositiveIntegerField(default=0)),
                ('cpu_usage_peak', models.FloatField(default=0.0)),
                ('total_screenshots', models.PositiveIntegerField(default=0)),
                ('total_html_pages', models.PositiveIntegerField(default=0)),
                ('total_data_size', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='runner.automationtask')),
            ],
        ),
        migrations.CreateModel(
            name='AutomationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=10)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('module', models.CharField(blank=True, default='', max_length=100)),
                ('function', models.CharField(blank=True, default='', max_length=100)),
                ('line_number', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='runner.automationtask')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PageEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('PAGE_LOAD', 'Page Load'), ('CAPTCHA_DETECTED', 'Captcha Detected'), ('ERROR', 'Error'), ('REDIRECT', 'Redirect'), ('FORM_SUBMIT', 'Form Submit'), ('CLICK', 'Click'), ('SCROLL', 'Scroll')], default='PAGE_LOAD', max_length=20)),
                ('url', models.URLField()),
                ('title', models.CharField(blank=True, default='', max_length=512)),
                ('status_code', models.PositiveIntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('load_time', models.FloatField(blank=True, null=True)),
                ('screenshot', models.ImageField(blank=True, null=True, upload_to='screenshots/')),
                ('html_content', models.FileField(blank=True, null=True, upload_to='html/')),
                ('note', models.TextField(blank=True, default='')),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='runner.automationtask')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CaptchaEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('captcha_type', models.CharField(choices=[('RECAPTCHA_V2', 'reCAPTCHA v2'), ('RECAPTCHA_V3', 'reCAPTCHA v3'), ('HCAPTCHA', 'hCaptcha'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=20)),
                ('status', models.CharField(choices=[('DETECTED', 'Detected'), ('SOLVED', 'Solved'), ('FAILED', 'Failed'), ('SKIPPED', 'Skipped')], default='DETECTED', max_length=20)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('solved_at', models.DateTimeField(blank=True, null=True)),
                ('screenshot', models.ImageField(blank=True, null=True, upload_to='captcha_screenshots/')),
                ('notes', models.TextField(blank=True, default='')),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('solved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='captcha_events', to='runner.automationtask')),
                ('page_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='captcha_events', to='runner.pageevent')),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
        migrations.AddIndex(
            model_name='automationtask',
            index=models.Index(fields=['status'], name='runner_auto_status_634da2_idx'),
        ),
        migrations.AddIndex(
            model_name='automationtask',
            index=models.Index(fields=['created_at'], name='runner_auto_created_f71c72_idx'),
        ),
        migrations.AddIndex(
            model_name='automationtask',
            index=models.Index(fields=['priority'], name='runner_auto_priorit_4f24e6_idx'),
        ),
        migrations.AddIndex(
            model_name='automationlog',
            index=models.Index(fields=['task', 'timestamp'], name='runner_auto_task_id_2731f2_idx'),
        ),
        migrations.AddIndex(
            model_name='automationlog',
            index=models.Index(fields=['level'], name='runner_auto_level_b78e99_idx'),
        ),
        migrations.AddIndex(
            model_name='pageevent',
            index=models.Index(fields=['task', 'timestamp'], name='runner_page_task_id_b08710_idx'),
        ),
        migrations.AddIndex(
            model_name='pageevent',
            index=models.Index(fields=['event_type'], name='runner_page_event_t_3b3ecd_idx'),
        ),
    ]
